FROM ubuntu:trusty
MAINTAINER bung@slac.stanford.edu
# A lot of MKL install stolen from https://gist.github.com/mgoldey/f3886b7accc0cd730e37528e09f7bc81

RUN apt-get update && apt-get --assume-yes install apt-transport-https wget \
    && wget https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS-2019.PUB \
    && apt-key add GPG-PUB-KEY-INTEL-SW-PRODUCTS-2019.PUB \
    && sh -c 'echo deb https://apt.repos.intel.com/mkl all main > /etc/apt/sources.list.d/intel-mkl.list' \
    && rm GPG-PUB-KEY-INTEL-SW-PRODUCTS-2019.PUB \
    && apt-get update && DEBIAN_FRONTEND=noninteractive apt-get -y install \
    cpio \
    intel-mkl-64bit-2018.3-051 \
    libopenmpi-dev \
    dpkg-dev \
    cmake \
    g++ \
    gcc \
    binutils \
    libx11-dev \
    libxpm-dev \
    libxft-dev \
    libxext-dev \
    build-essential \
    make \
    python \
    python-dev \
    libcxxtools-dev \
    libfftw3-dev \
    libmysqlclient-dev \
    libpng12-dev \
    libjpeg-turbo8-dev \
    libboost-dev \
    libboost-mpi-dev

RUN #(find /opt/intel -name "ia32*" -exec rm -rf {} \; || echo "removing ia32 binaries") ; \
    #(find /opt/intel -name "examples" -type d -exec rm -rf {} \; || echo "removing examples") ; \
    #(find /opt/intel -name "benchmarks" -exec rm -rf {} \; || echo "removing benchmarks") ; \
    #(find /opt/intel -name "documentation*" -exec rm -rf {} \; || echo "removing documentation") ; \
    #(rm -rf /opt/intel/mkl/interfaces ) ; \
    #(rm -rf /opt/intel/mkl/lib/intel64/*.a ) ; \
    #(rm -rf /opt/intel/mkl/lib/intel64/*mpi*.so ) ; \
    #(rm -rf /opt/intel/mkl/lib/intel64/*tbb*.so ) ; \
    #(rm -rf /opt/intel/mkl/lib/intel64/*pgi*.so ) ; \
    #(rm -rf /opt/intel/mkl/lib/intel64/*mc*.so ) ; \
    #(rm -rf /opt/intel/mkl/lib/intel64/*blacs*.so ) ; \
    #(rm -rf /opt/intel/mkl/lib/intel64/*scalapack*.so ) ; \
    #(rm -rf /opt/intel/mkl/lib/intel64/*gf*.so ) ; \
    #(rm -rf /opt/intel/mkl/lib/intel64/*mic*.so ) ; \
    #apt-get -y purge intel-tbb* intel-psxe* && \
    #apt-get clean autoclean && \
    #apt-get autoremove -y && \
    #ln -s -f bash /bin/sh && \
    #rm -rf /usr/share/doc && \
    #echo "/opt/intel/mkl/lib/intel64" >> /etc/ld.so.conf.d/intel.conf && \
    #ldconfig && \
    #echo "source /opt/intel/mkl/bin/mklvars.sh intel64" >> /etc/bash.bashrc
#&& rm -rf /var/lib/apt/lists/* && \

#RUN update-alternatives --install /usr/lib/x86_64-linux-gnu/libblas.so  \
#    libblas.so-x86_64-linux-gnu      /opt/intel/mkl/lib/intel64/libmkl_rt.so 50 && \
#    update-alternatives --install /usr/lib/x86_64-linux-gnu/libblas.so.3  \
#    libblas.so.3-x86_64-linux-gnu    /opt/intel/mkl/lib/intel64/libmkl_rt.so 50 && \
#    update-alternatives --install /usr/lib/x86_64-linux-gnu/liblapack.so   \
#    liblapack.so-x86_64-linux-gnu    /opt/intel/mkl/lib/intel64/libmkl_rt.so 50 && \
#    update-alternatives --install /usr/lib/x86_64-linux-gnu/liblapack.so.3 \
#    liblapack.so.3-x86_64-linux-gnu  /opt/intel/mkl/lib/intel64/libmkl_rt.so 50 && \
#    echo "/opt/intel/lib/intel64"     >  /etc/ld.so.conf.d/mkl.conf && \
#    echo "/opt/intel/mkl/lib/intel64" >> /etc/ld.so.conf.d/mkl.conf && \
#    ldconfig && \
#    echo "MKL_THREADING_LAYER=GNU" >> /etc/environment

WORKDIR /SOFTWARE/
RUN wget -q http://xrootd.org/download/v3.3.4/xrootd-3.3.4.tar.gz \
    && tar xf xrootd-3.3.4.tar.gz \
    && cd xrootd-3.3.4 && mkdir build && cd build \
    && cmake /SOFTWARE/xrootd-3.3.4 -DCMAKE_INSTALL_PREFIX=/opt/xrootd \
    && make && make install
WORKDIR /SOFTWARE/root_source
RUN wget -q https://root.cern.ch/download/root_v5.34.36.source.tar.gz \
    && tar --strip-components=1 -xf root_v5.34.36.source.tar.gz -C . \
    && rm root_v5.34.36.source.tar.gz \
    && sh ./configure --disable-xml --disable-fftw3 --enable-builtin-pcre --enable-builtin-freetype \
        --disable-roofit --disable-krb5 --disable-ssl --enable-python --enable-soversion --prefix=/SOFTWARE/root \
        --with-xrootd=/opt/xrootd \
    && make -j4
ENV ROOTSYS="/SOFTWARE/root"
ENV PATH="$ROOTSYS/bin:$PATH" 
ENV LD_LIBRARY_PATH="$ROOTSYS/lib/root"
ENV PYTHONPATH="$ROOTSYS/lib/root"
ENV DISPLAY="localhost:0.0"
RUN make install \
    && rm -rf /SOFTWARE/root_source
#WORKDIR /SOFTWARE/
